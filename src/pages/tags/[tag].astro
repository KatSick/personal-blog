---
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import Header from "../../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props as Awaited<
  ReturnType<typeof getStaticPaths>
>[0]["props"];
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header title={SITE_TITLE} />
    <main>
      <p>Posts tagged with #{tag} â€” {posts.length}</p>
      <ul>
        {
          posts
            .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf())
            .map((post) => {
              return (
                <li>
                  <FormattedDate date={post.data.pubDate} />
                  <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
                </li>
              );
            })
        }
      </ul>
    </main>
    <Footer />
  </body>
</html>
